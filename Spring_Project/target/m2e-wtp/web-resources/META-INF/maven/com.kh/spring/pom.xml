<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	
	<!-- 
		* pom.xml 파일
		Project Object Model의 약자
		내가 사용하고자 하는 라이브러리를 직접 등록하여 자동으로 프로젝트에 추가되게 하는 역할
		=> 라이브러리 관리의 편의성을 주는 파일 (Maven과 관련된 파일)
		
	 -->
	 
	 <!-- 
	 	* pom.xml의 구조
	 	
	 	1) modelVersion ~ version 엘리먼트 영역
	 	=> 이 스프링 프로젝트에 대한 정보를 기술한 부분
	 -->
	 
	<modelVersion>4.0.0</modelVersion> <!-- Spring Legacy 프로젝트 (4버전대) -->
	<groupId>com.kh</groupId> <!-- 2번째 레벨까지의 패키지 구조 -->
	<artifactId>spring</artifactId> <!-- 3번째 레벨의 패키지명 (즉, 프로그램명을 뜻함! == contextPath) -->
	<name>Spring_Project</name> <!-- 프로젝트명 -->
	<packaging>war</packaging> <!-- 배포될 때 압축될 형식 (jar는 일반 응용 프로그램의 배포 형식, war는 웹의 배포 형식)  -->
	<version>1.0.0-BUILD-SNAPSHOT</version> <!-- 배포될 war 파일의 버전을 나타냄 -->
	
	<!--
		2) properties 엘리먼트 영역
		=> 이 문서에서 사용할 환경설정 내용들을 담은 변수들을 지정한 부분
		=> 태그명이 곧 변수명, 시작 태그와 종료 태그 사이의 내용물이 변수에 담긴 데이터
		=> ${변수명} 으로 해당 값을 불러올 수 있음 !! 띄어쓰기 안 됨! 오류 남!
	-->
	
	<properties>
		<java-version>1.8</java-version> <!-- JDK 버전값 -->
		<org.springframework-version>5.3.23</org.springframework-version>  <!-- spring 과 관련된 jar 파일들의 버전값 -->
		<org.aspectj-version>1.6.10</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
	</properties>
	
	<!--
 		3) dependencies 엘리먼트 영역 
 			=> 이 프로젝트에서 사용할 라이브러리 (jar 파일들)에 대한 정보들을 담는 곳 
 			=> 즉, 내가 다운로드 받고자 하는 jar 파일들에 대한 기술 
 			=> 이것을 '의존성 라이브러리', '의존성 주입' 이라고 부른다.
 	-->
	 
	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
				
		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
				
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
	
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>
		
		<!-- 추가적으로 필요한 라이브러리들 세팅 -->
		<!-- 1. DB 관련(오라클, 마이바티스) 라이브러리들 -->
		<!-- 1_1. ojdbc6 라이브러리 -->
		<dependency>
		    <groupId>com.oracle.database.jdbc</groupId>
		    <artifactId>ojdbc6</artifactId>
		    <version>11.2.0.4</version>
		</dependency>
		
		<!-- 1_2. 스프링에서 JDBC 기능을 사용하기 위한 라이브러리 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-jdbc</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
		
		<!-- 1_3. 순수 MyBatis 라이브러리 -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>3.5.11</version>
		</dependency>
		
		<!-- 1_4. 스프링에서 MyBatis를 이용하기 위한 라이브러리 -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis-spring</artifactId>
		    <version>1.3.2</version>
		</dependency>
		
		<!-- 1_5. 커넥션 풀을 사용하기 위한 라이브러리 -->
		<dependency>
		    <groupId>commons-dbcp</groupId>
		    <artifactId>commons-dbcp</artifactId>
		    <version>1.4</version>
		</dependency>
		
		<!-- 2. Lombok 라이브러리 -->
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <version>1.18.24</version>
		    <scope>provided</scope>
		</dependency>
		
		<!-- 3. 스프링 시큐리티 모듈 라이브러리들 (core, web, contig): 버전 일치시켜야 함 -->
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-core</artifactId>
		    <version>5.7.3</version>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-web</artifactId>
		    <version>5.7.3</version>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-config</artifactId>
		    <version>5.7.3</version>
		</dependency>
		
		<!-- 4. 파일 업로드 관련 두 개의 라이브러리 -->
		<dependency>
		    <groupId>commons-fileupload</groupId>
		    <artifactId>commons-fileupload</artifactId>
		    <version>1.4</version>
		</dependency>
		
		<dependency>
    		<groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>2.11.0</version>
		</dependency>
		
		<!-- 5. Ajax 관련 두 개의 라이브러리 -->
		<dependency>
		    <groupId>com.googlecode.json-simple</groupId>
		    <artifactId>json-simple</artifactId>
		    <version>1.1.1</version>
		</dependency>
		
		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		    <version>2.10</version>
		</dependency>

	</dependencies>
	
	<!--
		4) build 엘리먼트 영역
		=> 실제 명령 수행 시 필요한 설정에 대한 내용을 기술하는 부분
		=> 이 명령을 실행할 때 누가 어떻게 할 건지를 정의해 놓은 곳 
	-->
	
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <mainClass>org.test.int1.Main</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
