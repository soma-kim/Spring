<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	
	<!-- 
		* web.xml 파일
		배포 서술자라고 부르는 파일로써, 서버가 구동될 때 가장 먼저 읽혀지는 파일
		즉, 복잡한 스프링 환경설정 파일들 중에 가장 먼저 읽혀지는 파일
		=> 서버가 알아야 할 가장 기본적인 설정은 이 파일에 다 기술되어 있어야만 함
	-->

	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<!-- 스프링의 최상위 설정 파일(root-context.xml) 의 경로를 지정한 부분 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/spring/root-context.xml
			/WEB-INF/spring/spring-security.xml
		</param-value>
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<!-- 모든 설정 파일을 연결할 수 있는 도구 (== bean == 자바 객체) 를 등록한 부분 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests -->
	<!--
		웹 사이트의 요청 처리를 어떻게 할 건지 등록한 부분
		즉, 요청을 처리하는 메인 서블릿을 등록한 부분(무조건 있어야 하는 설정)
		=> 해당 서블릿명: DispatcherServlet
		
		* 스프링에서는 내가 직접 서블릿을 만들 필요가 없음
		알게 모르게 스프링 내부에서는 중앙 처리 요청을 해 주는 서블릿이 존재함
		모든 요청은 그 중앙 처리 요청을 해 주는 서블릿을 거쳐가기 마련임
		
	-->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		
		<!-- DispatcherServlet 과 관련된 추가 설정에 대한 내용을 등록한 부분 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup> <!-- DispatcherServlet이 읽어들여야 할 파일의 우선순위가 1순위 -->
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- 
		* 필터
		모든 요청 처리 전 공통적으로 필요로 하는 기능들을 클라이언트의 요청을 Servlet이 받기 전에 먼저 가로채서 해당 작성된 내용이 먼저 수행되도록 하는 개념
		
		* 스프링에서 제공해 주는 인코딩 필터를 등록
		경로: spring-web-x.x.xx.jar 파일의
		     org.springframework.web.filter.CharacterEncodingFilter.class 파일
		=> 필터 등록 시 filter 태그와 filter-mapping 태그를 같이 기술
	 -->
	 
	 <!-- 필터를 이용하겠다 -->
	 <filter>
	 	<!-- 반드시 filter-name으로 filter명을 지정해야 함 -->
	 	<filter-name>encodingFilter</filter-name>
	 	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
	 	<!-- 옵션 1. 인코딩 방식을 지정(UTF-8) -->
	 	<init-param>
	 		<param-name>encoding</param-name>
	 		<param-value>UTF-8</param-value>
	 	</init-param>
	 	<!-- 옵션 2. 혹시나 충돌 시 강제로 인코딩을 UTF-8로 할 수 있게끔 지정 -->
	 	<init-param>
	 		<param-name>forceEncoding</param-name>
	 		<param-value>true</param-value>
	 	</init-param>
	 </filter>
	 
	 <!-- 이 필터를 언제 적용하겠다 -->
	 <filter-mapping>
	 	<!-- 위에서 지정한 encodingFilter를 모든 요청에 적용하겠음 -->
	 	<filter-name>encodingFilter</filter-name>
	 	<url-pattern>/*</url-pattern>
	 </filter-mapping>

</web-app>
