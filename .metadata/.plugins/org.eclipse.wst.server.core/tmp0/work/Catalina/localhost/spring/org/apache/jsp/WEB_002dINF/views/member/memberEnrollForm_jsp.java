/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.82
 * Generated at: 2022-11-25 01:15:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberEnrollForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    \r\n");
      out.write("    <!-- 메뉴바 -->\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"content\">\r\n");
      out.write("        <br><br>\r\n");
      out.write("        <div class=\"innerOuter\">\r\n");
      out.write("            <h2>회원가입</h2>\r\n");
      out.write("            <br>\r\n");
      out.write("\r\n");
      out.write("            <form action=\"insert.me\" method=\"post\" id=\"enrollForm\">\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"userId\">* ID : </label>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"userId\" placeholder=\"Please Enter ID\" name=\"userId\" required> <br>\r\n");
      out.write("                    <div id=\"checkResult\" style=\"font-size:0.8em; display:none;\"></div>\r\n");
      out.write("\r\n");
      out.write("                    <label for=\"userPwd\">* Password : </label>\r\n");
      out.write("                    <input type=\"password\" class=\"form-control\" id=\"userPwd\" placeholder=\"Please Enter Password\" name=\"userPwd\" required> <br>\r\n");
      out.write("\r\n");
      out.write("                    <label for=\"checkPwd\">* Password Check : </label>\r\n");
      out.write("                    <input type=\"password\" class=\"form-control\" id=\"checkPwd\" placeholder=\"Please Enter Password\" required> <br>\r\n");
      out.write("\r\n");
      out.write("                    <label for=\"userName\">* Name : </label>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"userName\" placeholder=\"Please Enter Name\" name=\"userName\" required> <br>\r\n");
      out.write("\r\n");
      out.write("                    <label for=\"email\"> &nbsp; Email : </label>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"email\" placeholder=\"Please Enter Email\" name=\"email\"> <br>\r\n");
      out.write("\r\n");
      out.write("                    <label for=\"age\"> &nbsp; Age : </label>\r\n");
      out.write("                    <input type=\"number\" class=\"form-control\" id=\"age\" placeholder=\"Please Enter Age\" name=\"age\"> <br>\r\n");
      out.write("\r\n");
      out.write("                    <label for=\"phone\"> &nbsp; Phone : </label>\r\n");
      out.write("                    <input type=\"tel\" class=\"form-control\" id=\"phone\" placeholder=\"Please Enter Phone (-없이)\" name=\"phone\"> <br>\r\n");
      out.write("                    \r\n");
      out.write("                    <label for=\"address\"> &nbsp; Address : </label>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"address\" placeholder=\"Please Enter Address\" name=\"address\"> <br>\r\n");
      out.write("                    \r\n");
      out.write("                    <label for=\"\"> &nbsp; Gender : </label> &nbsp;&nbsp;\r\n");
      out.write("                    <input type=\"radio\" id=\"Male\" value=\"M\" name=\"gender\" checked>\r\n");
      out.write("                    <label for=\"Male\">남자</label> &nbsp;&nbsp;\r\n");
      out.write("                    <input type=\"radio\" id=\"Female\" value=\"F\" name=\"gender\">\r\n");
      out.write("                    <label for=\"Female\">여자</label> &nbsp;&nbsp;\r\n");
      out.write("                </div> \r\n");
      out.write("                <br>\r\n");
      out.write("                <div class=\"btns\" align=\"center\">\r\n");
      out.write("                    <button type=\"submit\" class=\"btn btn-primary\" disabled>회원가입</button>\r\n");
      out.write("                    <button type=\"reset\" class=\"btn btn-danger\">초기화</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("        <br><br>\r\n");
      out.write("        \r\n");
      out.write("        <script>\r\n");
      out.write("        	$(function() {\r\n");
      out.write("        		\r\n");
      out.write("        		// 아이디를 입력받는 input 요소 객체를 변수에 담아두기 => keyup 이벤트 걸기\r\n");
      out.write("        		var $idInput = $(\"#enrollForm input[name=userId]\");\r\n");
      out.write("        		\r\n");
      out.write("        		$idInput.keyup(function() {\r\n");
      out.write("        			\r\n");
      out.write("        			// 우선 최소 5글자 이상으로 아이디값이 입력되어 있을 때만 ajax 요청\r\n");
      out.write("        			// => 쿼리문의 갯수가 한정되어 있을 수 있기 때문\r\n");
      out.write("        			if($idInput.val().length >= 5) {\r\n");
      out.write("        				\r\n");
      out.write("        				// ajax를 요청하여 중복체크\r\n");
      out.write("        				$.ajax({\r\n");
      out.write("        					url : \"idCheck.me\",\r\n");
      out.write("        					data : {checkId : $idInput.val()},\r\n");
      out.write("        					success : function(result) {\r\n");
      out.write("        						\r\n");
      out.write("        						// console.log(result);\r\n");
      out.write("        						\r\n");
      out.write("        						if(result == \"NNNNN\") { // 사용 불가능\r\n");
      out.write("        							\r\n");
      out.write("        							// 빨간색 메시지 출력\r\n");
      out.write("        							$(\"#checkResult\").show();\r\n");
      out.write("        							$(\"#checkResult\").css(\"color\", \"red\").text(\"중복된 아이디가 존재합니다. 다시 입력해 주세요.\");\r\n");
      out.write("        							\r\n");
      out.write("        							// 사용 가능 아이디를 쳤다가 다시 불가능한 아이디를 친다면 버튼 비활성화\r\n");
      out.write("        							$(\"#enrollForm button[type=submit]\").attr(\"disabled\", true);\r\n");
      out.write("        							\r\n");
      out.write("        						} else { // 사용 가능\r\n");
      out.write("        							\r\n");
      out.write("        							// 초록색 메시지 출력\r\n");
      out.write("        							$(\"#checkResult\").show();\r\n");
      out.write("        							$(\"#checkResult\").css(\"color\", \"green\").text(\"멋진 아이디네요!\");\r\n");
      out.write("        							\r\n");
      out.write("        							// 버튼 활성화\r\n");
      out.write("        							$(\"#enrollForm button[type=submit]\").attr(\"disabled\", false);\r\n");
      out.write("        							\r\n");
      out.write("        						}\r\n");
      out.write("        					\r\n");
      out.write("        					},\r\n");
      out.write("        					error : function() {\r\n");
      out.write("        						console.log(\"아이디 중복 체크용 ajax 통신 실패!\");\r\n");
      out.write("        					}\r\n");
      out.write("        				});\r\n");
      out.write("        				\r\n");
      out.write("        			} else { // 5글자 이하라면? 혹은 사용자가 5글자 이상의 아이디를 쳤다가 다시 5글자 미만으로 줄인다면? \r\n");
      out.write("        					\r\n");
      out.write("        				// 버튼 비활성화 및 메시지 내용 숨기기\r\n");
      out.write("        				$(\"#checkResult\").hide();\r\n");
      out.write("        				$(\"#enrollForm button[type=submit]\").attr(\"disabled\", true);\r\n");
      out.write("        				\r\n");
      out.write("        			}\r\n");
      out.write("        			\r\n");
      out.write("        		});\r\n");
      out.write("        		\r\n");
      out.write("        	});\r\n");
      out.write("        </script>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 푸터바 -->\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
